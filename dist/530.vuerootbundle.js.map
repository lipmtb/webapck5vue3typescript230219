{"version":3,"file":"530.vuerootbundle.js","mappings":"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","sources":["webpack://vue3webpack5-2022100601/./src/views/helloAlgo/index.vue?6a63","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/tree/treeShow/index.vue?92ca","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/index.vue?e016","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/sort/index.ts","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/link/linkNode.ts","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/link/index.ts","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/tree/index.ts","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/tree/treeShow/index.vue?5cae","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/tree/treeShow/index.vue?9a5a","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/tree/treeShow/index.vue?d6c1","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/index.vue?5eb2","webpack://vue3webpack5-2022100601/./src/views/helloAlgo/index.vue?2c4c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1707623525970\n      var cssReload = require(\"../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1707623526820\n      var cssReload = require(\"../../../../../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\r\nconst _hoisted_1 = { class: \"helloAlgo\" };\r\nconst _hoisted_2 = /*#__PURE__*/ _createElementVNode(\"h1\", null, \"helloAlgo\", -1);\r\nconst _hoisted_3 = { class: \"centerTree\" };\r\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\r\n    const _component_TreeShow = _resolveComponent(\"TreeShow\");\r\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\r\n        _hoisted_2,\r\n        _createElementVNode(\"div\", null, [\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[0] || (_cache[0] = ($event) => (_ctx.plainSortA(_ctx.arr1)))\r\n            }, \"最小值排序\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[1] || (_cache[1] = ($event) => (_ctx.quickSort(_ctx.arr1)))\r\n            }, \"快速排序1\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[2] || (_cache[2] = ($event) => (_ctx.quickSort(_ctx.arr2)))\r\n            }, \"快速排序2\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[3] || (_cache[3] = ($event) => (_ctx.reverseQuickSort(_ctx.arr1)))\r\n            }, \"快速排序2\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[4] || (_cache[4] = ($event) => (_ctx.bubbleSortArray(_ctx.arr1)))\r\n            }, \"冒泡排序\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[5] || (_cache[5] = ($event) => (_ctx.bubbleSortArrayA(_ctx.arr1)))\r\n            }, \"冒泡排序a\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[6] || (_cache[6] = ($event) => (_ctx.recurGetArrTest(_ctx.arr1)))\r\n            }, \"递归遍历数组\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[7] || (_cache[7] = ($event) => (_ctx.linkNodeTackDeep()))\r\n            }, \"递归遍历链表\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[8] || (_cache[8] = ($event) => (_ctx.getLastNodeDeep()))\r\n            }, \"递归遍历链表最后一个\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[9] || (_cache[9] = ($event) => (_ctx.reverseLinkAndGetRoot()))\r\n            }, \"链表逆置\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[10] || (_cache[10] = ($event) => (_ctx.firstMidTrace()))\r\n            }, \"先根遍历\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[11] || (_cache[11] = ($event) => (_ctx.leftMidTrace()))\r\n            }, \"中根遍历\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[12] || (_cache[12] = ($event) => (_ctx.afterRootTrace()))\r\n            }, \"后根遍历\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[13] || (_cache[13] = ($event) => (_ctx.afterRootTrace()))\r\n            }, \"后根遍历\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[14] || (_cache[14] = ($event) => (_ctx.getFirstByMidAndAfterTreeTest()))\r\n            }, \" 中后输出先序，并构建输出二叉树 \"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[15] || (_cache[15] = ($event) => (_ctx.largetFirstTrace()))\r\n            }, \"广度优先遍历\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[16] || (_cache[16] = ($event) => (_ctx.comparetTwoTree()))\r\n            }, \"二叉树比较\")\r\n        ]),\r\n        _createElementVNode(\"div\", null, [\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[17] || (_cache[17] = ($event) => (_ctx.stringOnly()))\r\n            }, \"字符串去重\"),\r\n            _createElementVNode(\"button\", {\r\n                onClick: _cache[18] || (_cache[18] = ($event) => (_ctx.stringReverseWithGap()))\r\n            }, \"字符串括号反转\")\r\n        ]),\r\n        _createElementVNode(\"div\", _hoisted_3, [\r\n            _createVNode(_component_TreeShow, {\r\n                treeRoot: _ctx.treeDataRef,\r\n                deepCount: 0\r\n            }, null, 8, [\"treeRoot\"])\r\n        ])\r\n    ]));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgudnVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5kZXgudnVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsSUFBSSxtQkFBbUIsRUFBRSxnQkFBZ0IsSUFBSSxpQkFBaUIsRUFBRSxXQUFXLElBQUksWUFBWSxFQUFFLFNBQVMsSUFBSSxVQUFVLEVBQUUsa0JBQWtCLElBQUksbUJBQW1CLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFFdk0sTUFBTSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLENBQUE7QUFDekMsTUFBTSxVQUFVLEdBQUcsYUFBYSxDQUFBLG1CQUFtQixDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDaEYsTUFBTSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLENBQUE7QUFFMUMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxJQUFTLEVBQUMsTUFBVyxFQUFDLE1BQVcsRUFBQyxNQUFXLEVBQUMsS0FBVSxFQUFDLFFBQWE7SUFDM0YsTUFBTSxtQkFBbUIsR0FBRyxpQkFBaUIsQ0FBQyxVQUFVLENBQUUsQ0FBQTtJQUUxRCxPQUFPLENBQUMsVUFBVSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRTtRQUMzRCxVQUFVO1FBQ1YsbUJBQW1CLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRTtZQUMvQixtQkFBbUIsQ0FBQyxRQUFRLEVBQUU7Z0JBQzVCLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFXLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUNsRixFQUFFLE9BQU8sQ0FBQztZQUNYLG1CQUFtQixDQUFDLFFB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","export const recurGetArr = (arr, i) => {\r\n    const len = arr.length;\r\n    if (i >= 0 && i < len) {\r\n        console.log(\"递归遍历数组\", arr[i]);\r\n        recurGetArr(arr, i + 1);\r\n    }\r\n};\r\nexport const swap = (arr, num1, num2) => {\r\n    const temp = arr[num2];\r\n    arr[num2] = arr[num1];\r\n    arr[num1] = temp;\r\n};\r\nexport const pointerArr = (arr, left, right, isReverse) => {\r\n    let i = left;\r\n    let j = right;\r\n    while (i < j) {\r\n        if (isReverse) {\r\n            while (i < j && arr[j] <= arr[left]) {\r\n                j--;\r\n            }\r\n            while (i < j && arr[i] >= arr[left]) {\r\n                i++;\r\n            }\r\n            swap(arr, i, j);\r\n        }\r\n        else {\r\n            while (i < j && arr[j] >= arr[left]) {\r\n                j--;\r\n            }\r\n            while (i < j && arr[i] <= arr[left]) {\r\n                i++;\r\n            }\r\n            swap(arr, i, j);\r\n        }\r\n    }\r\n    swap(arr, i, left);\r\n    return i;\r\n};\r\nexport const sortOlogn = (array, start, end, isReverse = false) => {\r\n    const pointer = pointerArr(array, start, end, isReverse);\r\n    if (start <= pointer - 1) {\r\n        sortOlogn(array, start, pointer - 1, isReverse);\r\n    }\r\n    if (pointer + 1 <= end) {\r\n        sortOlogn(array, pointer + 1, end, isReverse);\r\n    }\r\n};\r\n// 冒泡排序\r\nexport const bubbleSort = (array, isReverse = false) => {\r\n    const len = array.length;\r\n    for (let i = len - 1; i >= 1; i--) {\r\n        for (let j = 0; j < i; j++) {\r\n            if (isReverse) {\r\n                if (array[j] < array[j + 1]) {\r\n                    swap(array, j, j + 1);\r\n                }\r\n            }\r\n            else {\r\n                if (array[j] > array[j + 1]) {\r\n                    swap(array, j, j + 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const bubbleSortA = (array, isReverse = false) => {\r\n    const len = array.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        for (let j = len - 1; j > i; j--) {\r\n            if (isReverse) {\r\n                if (array[j] > array[j - 1]) {\r\n                    swap(array, j, j - 1);\r\n                }\r\n            }\r\n            else {\r\n                if (array[j] < array[j - 1]) {\r\n                    swap(array, j, j - 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nconst getMin = (array) => {\r\n    let minIndx = 0;\r\n    const len = array.length;\r\n    for (let i = 0; i < len; i++) {\r\n        if (array[i] !== null) {\r\n            minIndx = i;\r\n            break;\r\n        }\r\n    }\r\n    for (let j = 0; j < len; j++) {\r\n        const temp = array[j];\r\n        const min = array[minIndx];\r\n        if (temp !== null && min !== null && temp < min) {\r\n            minIndx = j;\r\n        }\r\n    }\r\n    let result = array[minIndx];\r\n    array[minIndx] = null;\r\n    return result;\r\n};\r\nexport const plainSort = (array) => {\r\n    const arrResult = new Array(array.length);\r\n    for (let i = 0; i < array.length; i++) {\r\n        arrResult[i] = getMin(array);\r\n    }\r\n    console.log(\"result\", arrResult);\r\n    return arrResult;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFhLEVBQUUsQ0FBUyxFQUFFLEVBQUU7SUFDcEQsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRTtRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QixXQUFXLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztLQUMzQjtBQUVMLENBQUMsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLEdBQWEsRUFBRSxJQUFZLEVBQUUsSUFBWSxFQUFFLEVBQUU7SUFDOUQsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEIsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztBQUNyQixDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUFhLEVBQUUsSUFBWSxFQUFFLEtBQWEsRUFBRSxTQUFrQixFQUFFLEVBQUU7SUFDekYsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2IsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ1YsSUFBSSxTQUFTLEVBQUU7WUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDakMsQ0FBQyxFQUFF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","export class LinkNode {\r\n    data;\r\n    next;\r\n    constructor(data, next) {\r\n        this.data = data;\r\n        this.next = next ?? null;\r\n    }\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlua05vZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsaW5rTm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8sUUFBUTtJQUNqQixJQUFJLENBQUM7SUFDTCxJQUFJLENBQWtCO0lBQ3RCLFlBQVksSUFBWSxFQUFFLElBQWU7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDO0lBQzdCLENBQUM7Q0FDSiJ9","// 递归遍历链表\r\nexport const recurLinkList = (root) => {\r\n    if (!root) {\r\n        return;\r\n    }\r\n    console.log(\"遍历\", root.data);\r\n    if (root.next) {\r\n        recurLinkList(root.next);\r\n    }\r\n};\r\nexport const getLastNode = (root) => {\r\n    return !root?.next ? root : getLastNode(root.next);\r\n};\r\n// 链表的逆置简洁\r\nexport const reverseLinkNormal = (root) => {\r\n    if (!root?.next) {\r\n        return root;\r\n    }\r\n    const lastNode = reverseLinkNormal(root.next);\r\n    root.next.next = root;\r\n    root.next = null;\r\n    return lastNode;\r\n};\r\n// 链表的逆置\r\nexport const reverseLink = (root, newRoot) => {\r\n    if (!root) {\r\n        return;\r\n    }\r\n    reverseLink(root.next, newRoot);\r\n    console.log(\"root item:\", root);\r\n    if (root.next) {\r\n        root.next.next = root;\r\n    }\r\n    else {\r\n        newRoot?.push?.(root);\r\n    }\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxTQUFTO0FBQ1QsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQUMsSUFBYyxFQUFFLEVBQUU7SUFFNUMsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNQLE9BQU87S0FDVjtJQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDWCxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzVCO0FBQ0wsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQyxDQUFDLElBQWMsRUFBRSxFQUFFO0lBQ3hFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdkQsQ0FBQyxDQUFBO0FBRUQsVUFBVTtBQUNWLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUErQyxDQUFDLElBQXFCLEVBQUUsRUFBRTtJQUNuRyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRTtRQUNiLE9BQU8sSUFBSSxDQUFDO0tBQ2Y7SUFDRCxNQUFNLFFBQVEsR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2pCLE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUMsQ0FBQTtBQUdELFFBQVE7QUFDUixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxJQUFxQixFQUFFLE9BQTBCLEVBQUUsRUFBRTtJQUM3RSxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsT0FBTztLQUNWO0lBQ0QsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEMsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0tBQ3pCO1NBQU07UUFDSCxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7QUFDTCxDQUFDLENBQUEifQ==","export class TreeNode {\r\n    data;\r\n    left;\r\n    right;\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n}\r\nexport const midFirstTrace = (root, result) => {\r\n    if (!root) {\r\n        return;\r\n    }\r\n    if (!result) {\r\n        result = [];\r\n    }\r\n    result.push(root.data);\r\n    midFirstTrace(root.left, result);\r\n    midFirstTrace(root.right, result);\r\n};\r\nexport const leftMidFirstTrace = (root, result) => {\r\n    if (!root) {\r\n        return;\r\n    }\r\n    if (!result) {\r\n        result = [];\r\n    }\r\n    leftMidFirstTrace(root.left, result);\r\n    result.push(root.data);\r\n    leftMidFirstTrace(root.right, result);\r\n};\r\nexport const afterLeftRightMidTrace = (root, result) => {\r\n    if (!root) {\r\n        return;\r\n    }\r\n    if (!result) {\r\n        result = [];\r\n    }\r\n    afterLeftRightMidTrace(root.left, result);\r\n    afterLeftRightMidTrace(root.right, result);\r\n    result.push(root.data);\r\n};\r\nconst getAfterStrByMidHalf = (midTemp, afterStr) => {\r\n    const afterArray = afterStr.split(\"\");\r\n    let startIndex = -1;\r\n    let endIndex = -1;\r\n    afterArray.forEach((item, index) => {\r\n        if (midTemp.includes(item)) {\r\n            if (startIndex === -1) {\r\n                startIndex = index;\r\n                endIndex = index;\r\n            }\r\n            else {\r\n                endIndex = index;\r\n            }\r\n        }\r\n    });\r\n    if (startIndex === -1) {\r\n        return \"\";\r\n    }\r\n    return afterStr.slice(startIndex, endIndex + 1);\r\n};\r\n// 根据中序和后序返回先序\r\nexport const getFirstByMidAndAfterTree = (midStr, afterStr, result) => {\r\n    const root = afterStr[afterStr.length - 1];\r\n    result.push(root);\r\n    const newRootIndex = midStr.indexOf(root);\r\n    if (newRootIndex !== -1) {\r\n        const midLeftStr = midStr.slice(0, newRootIndex);\r\n        const afterLeftStr = getAfterStrByMidHalf(midLeftStr, afterStr);\r\n        if (midLeftStr && afterLeftStr) {\r\n            getFirstByMidAndAfterTree(midLeftStr, afterLeftStr, result);\r\n        }\r\n        if (newRootIndex + 1 <= midStr.length - 1) {\r\n            const midRightStr = midStr.slice(newRootIndex + 1, midStr.length);\r\n            const afterRightStr = getAfterStrByMidHalf(midRightStr, afterStr);\r\n            if (midRightStr && afterRightStr) {\r\n                getFirstByMidAndAfterTree(midRightStr, afterRightStr, result);\r\n            }\r\n        }\r\n    }\r\n};\r\n// 根据中序和后序，并构建二叉树\r\nexport const getFirstByMidAndAfterBuildTree = (midStr, afterStr) => {\r\n    const currentRootData = afterStr[afterStr.length - 1];\r\n    const midIndex = midStr.indexOf(currentRootData);\r\n    const currentRoot = new TreeNode(currentRootData);\r\n    // 左子树新中，后\r\n    const leftMidStr = midStr.slice(0, midIndex);\r\n    const leftAfterStr = afterStr\r\n        .split(\"\")\r\n        .filter((item) => leftMidStr.includes(item))\r\n        .join(\"\");\r\n    if (leftMidStr.length && leftAfterStr.length) {\r\n        currentRoot.left = getFirstByMidAndAfterBuildTree(leftMidStr, leftAfterStr);\r\n    }\r\n    // 右子树新中，后\r\n    const rightMidStr = midStr.slice(midIndex + 1, midStr.length);\r\n    const rightAfterStr = afterStr\r\n        .split(\"\")\r\n        .filter((item) => rightMidStr.includes(item))\r\n        .join(\"\");\r\n    if (rightMidStr.length && rightAfterStr.length) {\r\n        currentRoot.right = getFirstByMidAndAfterBuildTree(rightMidStr, rightAfterStr);\r\n    }\r\n    return currentRoot;\r\n};\r\nexport const getAfterByFirstMidTrace = (firstStr, midStr) => {\r\n    if (!firstStr || !midStr) {\r\n        return;\r\n    }\r\n    const rootData = firstStr[0];\r\n    const currentRoot = new TreeNode(rootData);\r\n    const midIndex = midStr.indexOf(rootData);\r\n    // 左子树\r\n    let leftMidStr = midStr.slice(0, midIndex);\r\n    let leftFirstArr = firstStr.slice(1).split(\"\");\r\n    let startLeftIndex = 0;\r\n    let stop = false;\r\n    leftFirstArr.forEach((item) => {\r\n        if (stop) {\r\n            return;\r\n        }\r\n        if (leftMidStr.includes(item) &&\r\n            leftMidStr.includes(leftFirstArr[startLeftIndex + 1])) {\r\n            startLeftIndex++;\r\n        }\r\n        else {\r\n            stop = true;\r\n        }\r\n    });\r\n    let leftFirstStr = leftFirstArr.slice(0, startLeftIndex + 1).join(\"\");\r\n    if (leftFirstStr && leftMidStr) {\r\n        currentRoot.left = getAfterByFirstMidTrace(leftFirstStr, leftMidStr);\r\n    }\r\n    // 右子树\r\n    let rightMidStr = midStr.slice(midIndex + 1);\r\n    let rightFirstStr = \"\";\r\n    let len = rightMidStr.length;\r\n    for (let i = 0; i < leftFirstArr.length - len + 1; i++) {\r\n        if (rightFirstStr) {\r\n            return;\r\n        }\r\n        let tempArr = leftFirstArr.slice(i, i + len);\r\n        if (tempArr.every((item) => rightMidStr.includes(item))) {\r\n            rightFirstStr = tempArr.join(\"\");\r\n        }\r\n    }\r\n    if (rightFirstStr && rightMidStr) {\r\n        currentRoot.right = getAfterByFirstMidTrace(rightFirstStr, rightMidStr);\r\n    }\r\n    return currentRoot;\r\n};\r\nexport const compareTwoTreeAndReturnBoolean = (rootA, rootB) => {\r\n    if (!rootA && !rootB) {\r\n        return true;\r\n    }\r\n    if (rootA === rootB) {\r\n        return true;\r\n    }\r\n    if ((!rootA && rootB) || (!rootB && rootA)) {\r\n        return false;\r\n    }\r\n    const leftResult = compareTwoTreeAndReturnBoolean(rootA?.left, rootB?.left);\r\n    const rightResult = compareTwoTreeAndReturnBoolean(rootA?.right, rootB?.right);\r\n    return leftResult && rightResult && rootA?.data === rootB?.data;\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sUUFBUTtJQUNuQixJQUFJLENBQUM7SUFDTCxJQUFJLENBQWtCO0lBQ3RCLEtBQUssQ0FBa0I7SUFDdkIsWUFBWSxJQUFZO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUFDLElBQXFCLEVBQUUsTUFBZ0IsRUFBRSxFQUFFO0lBQ3ZFLElBQUksQ0FBQyxJQUFJLEVBQUU7UUFDVCxPQUFPO0tBQ1I7SUFFRCxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1gsTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNiO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkIsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxJQUFxQixFQUFFLE1BQWdCLEVBQUUsRUFBRTtJQUMzRSxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTztLQUNSO0lBQ0QsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNYLE1BQU0sR0FBRyxFQUFFLENBQUM7S0FDYjtJQUNELGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkIsaUJB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","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\r\nconst _hoisted_1 = { class: \"treeShowStage\" };\r\nconst _hoisted_2 = { class: \"tree-data\" };\r\nconst _hoisted_3 = { class: \"child-list\" };\r\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\r\n    const _component_TreeShow = _resolveComponent(\"TreeShow\");\r\n    return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\r\n        _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.treeRoot.data), 1),\r\n        _createElementVNode(\"div\", _hoisted_3, [\r\n            (_ctx.treeRoot.left)\r\n                ? (_openBlock(), _createElementBlock(\"div\", {\r\n                    key: 0,\r\n                    class: _normalizeClass([\"child-item child-left\", [`child-left-${_ctx.deepCount}`]])\r\n                }, [\r\n                    _createVNode(_component_TreeShow, {\r\n                        treeRoot: _ctx.treeRoot.left,\r\n                        deepCount: _ctx.deepCount + 1\r\n                    }, null, 8, [\"treeRoot\", \"deepCount\"])\r\n                ], 2))\r\n                : _createCommentVNode(\"\", true),\r\n            (_ctx.treeRoot.right)\r\n                ? (_openBlock(), _createElementBlock(\"div\", {\r\n                    key: 1,\r\n                    class: _normalizeClass([\"child-item child-right\", [`child-right-${_ctx.deepCount}`]])\r\n                }, [\r\n                    _createVNode(_component_TreeShow, {\r\n                        treeRoot: _ctx.treeRoot.right,\r\n                        deepCount: _ctx.deepCount + 1\r\n                    }, null, 8, [\"treeRoot\", \"deepCount\"])\r\n                ], 2))\r\n                : _createCommentVNode(\"\", true)\r\n        ])\r\n    ]));\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgudnVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5kZXgudnVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLElBQUksZ0JBQWdCLEVBQUUsa0JBQWtCLElBQUksbUJBQW1CLEVBQUUsZ0JBQWdCLElBQUksaUJBQWlCLEVBQUUsV0FBVyxJQUFJLFlBQVksRUFBRSxjQUFjLElBQUksZUFBZSxFQUFFLFNBQVMsSUFBSSxVQUFVLEVBQUUsa0JBQWtCLElBQUksbUJBQW1CLEVBQUUsa0JBQWtCLElBQUksbUJBQW1CLEVBQUUsTUFBTSxLQUFLLENBQUE7QUFFMVQsTUFBTSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLENBQUE7QUFDN0MsTUFBTSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLENBQUE7QUFDekMsTUFBTSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLENBQUE7QUFFMUMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxJQUFTLEVBQUMsTUFBVyxFQUFDLE1BQVcsRUFBQyxNQUFXLEVBQUMsS0FBVSxFQUFDLFFBQWE7SUFDM0YsTUFBTSxtQkFBbUIsR0FBRyxpQkFBaUIsQ0FBQyxVQUFVLENBQUUsQ0FBQTtJQUUxRCxPQUFPLENBQUMsVUFBVSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRTtRQUMzRCxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9FLG1CQUFtQixDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUU7WUFDckMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztnQkFDbEIsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxFQUFFO29CQUN4QyxHQUFHLEVBQUUsQ0FBQztvQkFDTixLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ3BGLEVBQUU7b0JBQ0QsWUFBWSxDQUFDLG1CQUFtQixFQUFFO3dCQUNoQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJO3dCQUM1QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDO3FCQUM5QixFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7aUJBQ3ZDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ1IsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUM7WUFDakMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztnQkFDbkIsQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsS0FBSyxFQUFFO29CQUN4QyxHQUFHLEVBQUUsQ0FBQztvQkFDTixLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxlQUFlLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ3RGLEVBQUU7b0JBQ0QsWUFBWSxDQUFDLG1CQUFtQixFQUFFO3dCQUNoQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLO3dCQUM3QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDO3FCQUM5QixFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7aUJBQ3ZDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ1IsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUM7U0FDbEMsQ0FBQztLQUNILENBQUMsQ0FBQyxDQUFBO0FBQ0wsQ0FBQyJ9","import { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n    props: [\"treeRoot\", \"deepCount\"],\r\n    name: \"TreeShow\",\r\n    setup() {\r\n        console.log(\"this.props\", this);\r\n        return {};\r\n    },\r\n});\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgudnVlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5kZXgudnVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxLQUFLLENBQUM7QUFFdEMsZUFBZSxlQUFlLENBQUM7SUFDN0IsS0FBSyxFQUFFLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQztJQUNoQyxJQUFJLEVBQUUsVUFBVTtJQUNoQixLQUFLO1FBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFaEMsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0NBQ0YsQ0FBQyxDQUFDIn0=","import { render } from \"./index.vue?vue&type=template&id=34170e8d&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=34170e8d&lang=less\"\n\nimport exportComponent from \"E:\\\\vscodeWork\\\\vue\\\\vue3webpack5-2022100601\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent, ref } from \"vue\";\r\nimport { plainSort, sortOlogn, bubbleSort, bubbleSortA, recurGetArr, } from \"./sort\";\r\nimport { LinkNode } from \"./link/linkNode\";\r\nimport { recurLinkList, reverseLink, getLastNode } from \"./link\";\r\nimport { TreeNode, midFirstTrace, leftMidFirstTrace, afterLeftRightMidTrace, getAfterByFirstMidTrace, compareTwoTreeAndReturnBoolean, } from \"./tree\";\r\nimport TreeShow from \"./tree/treeShow\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const arr1 = [5, 6, 8, 7, 4, 1, 3, 2, 9];\r\n        const arr2 = [9, 8, 7, 6, 5, 4, 3, 2, 1];\r\n        const plainSortA = (array) => {\r\n            plainSort(array);\r\n        };\r\n        // 1.1快速排序\r\n        const quickSort = (array) => {\r\n            sortOlogn(array, 0, array.length - 1);\r\n            console.log(\"result\", array);\r\n        };\r\n        const reverseQuickSort = (array) => {\r\n            sortOlogn(array, 0, array.length - 1, true);\r\n            console.log(\"result\", array);\r\n        };\r\n        // 1.2 冒泡排序\r\n        const bubbleSortArray = (array) => {\r\n            bubbleSort(array);\r\n            // bubbleSort(array, true);\r\n            console.log(\"result\", array);\r\n        };\r\n        const bubbleSortArrayA = (array) => {\r\n            bubbleSortA(array, true);\r\n            console.log(\"resultA\", array);\r\n        };\r\n        const rootNode = new LinkNode(\"1\");\r\n        const rootNodeA = new LinkNode(\"a\");\r\n        const rootNodeB = new LinkNode(\"b\");\r\n        const rootNodeC = new LinkNode(\"c\");\r\n        rootNode.next = rootNodeA;\r\n        rootNodeA.next = rootNodeB;\r\n        rootNodeB.next = rootNodeC;\r\n        const linkNodeTackDeep = () => {\r\n            recurLinkList(rootNode);\r\n        };\r\n        const recurGetArrTest = (arr) => {\r\n            recurGetArr(arr, 0);\r\n        };\r\n        const getLastNodeDeep = () => {\r\n            getLastNode(rootNode);\r\n        };\r\n        // 链表逆置\r\n        const reverseLinkAndGetRoot = () => {\r\n            recurLinkList(rootNode);\r\n            const newNode = [];\r\n            reverseLink(rootNode, newNode);\r\n            rootNode.next = null;\r\n            console.log(\"result\", rootNode, newNode);\r\n            if (newNode) {\r\n                recurLinkList(newNode?.[0]);\r\n            }\r\n        };\r\n        const tree = new TreeNode(\"A\");\r\n        const nodeB = new TreeNode(\"B\");\r\n        const nodeC = new TreeNode(\"C\");\r\n        const nodeD = new TreeNode(\"D\");\r\n        const nodeE = new TreeNode(\"E\");\r\n        const nodeF = new TreeNode(\"F\");\r\n        const nodeG = new TreeNode(\"G\");\r\n        const nodeH = new TreeNode(\"H\");\r\n        const nodeI = new TreeNode(\"I\");\r\n        const nodeJ = new TreeNode(\"J\");\r\n        const treeDataRef = ref(tree);\r\n        tree.left = nodeB;\r\n        tree.right = nodeC;\r\n        nodeB.left = nodeD;\r\n        nodeB.right = nodeE;\r\n        nodeC.left = nodeF;\r\n        nodeC.right = nodeG;\r\n        nodeF.left = nodeH;\r\n        nodeH.left = nodeI;\r\n        nodeH.right = nodeJ;\r\n        const firstMidTrace = () => {\r\n            const arr = [];\r\n            midFirstTrace(tree, arr);\r\n            console.log(\"先根：\", arr);\r\n        };\r\n        const leftMidTrace = () => {\r\n            const arr = [];\r\n            leftMidFirstTrace(tree, arr);\r\n            console.log(\"中根：\", arr);\r\n        };\r\n        const afterRootTrace = () => {\r\n            const arr = [];\r\n            afterLeftRightMidTrace(tree, arr);\r\n            console.log(\"后根：\", arr);\r\n        };\r\n        const getFirstByMidAndAfterTreeTest = () => {\r\n            const result = [];\r\n            // getFirstByMidAndAfterTree(\"FCGADBE\", \"FGCDEBA\", result);\r\n            // console.log(result.join(\"\"));\r\n            // 中后序还原二叉树\r\n            // const root = getFirstByMidAndAfterBuildTree(\"FCGADBE\", \"FGCDEBA\");\r\n            // 前中序还原二叉树\r\n            const root = getAfterByFirstMidTrace(\"ACFGBDE\", \"FCGADBE\"); //  \"FGCDEBA\"\r\n            afterLeftRightMidTrace(root, result);\r\n            console.log(result.join(\"\"));\r\n            treeDataRef.value = root;\r\n            return root;\r\n        };\r\n        const testStr1 = \"aaabbbccddddddddeeefghiiiij\";\r\n        const stringOnly = () => {\r\n            const result = [];\r\n            const strArray = testStr1.split(\"\");\r\n            strArray.forEach((strItem) => {\r\n                if (!result[0] || result[result.length - 1] !== strItem) {\r\n                    result.push(strItem);\r\n                }\r\n            });\r\n            console.log(\"result\", result.join(\"\"));\r\n            return result.join(\"\");\r\n        };\r\n        const testStrKuo = \"1(32)4(kj(hgfe(dcb)a)i)\";\r\n        const splitStrByGap = (tempStr) => {\r\n            const splitResultArray = [];\r\n            let stack = [];\r\n            const sourceArray = tempStr.split(\"\");\r\n            sourceArray.forEach((temp, index) => {\r\n                stack.push(temp);\r\n                if (stack[0] === \"(\") {\r\n                    if (temp === \")\" &&\r\n                        stack.filter((item) => item === \"(\").length ===\r\n                            stack.filter((item) => item === \")\").length) {\r\n                        splitResultArray.push([...stack]);\r\n                        stack = [];\r\n                    }\r\n                }\r\n                else {\r\n                    splitResultArray.push([temp]);\r\n                    stack = [];\r\n                }\r\n            });\r\n            return splitResultArray;\r\n        };\r\n        const reverseSingle = (str) => {\r\n            if (str.indexOf(\"(\") > -1) {\r\n                if (str[0] === \"(\" && str[str.length - 1] === \")\" && str.length > 2) {\r\n                    const innerStr = str.slice(1, str.length - 1);\r\n                    if (innerStr.indexOf(\"(\") > -1) {\r\n                        const resultArray = [...splitStrByGap(innerStr)];\r\n                        return [...resultArray.reverse()]\r\n                            .map((item) => {\r\n                            return reverseSingle(item.join(\"\"));\r\n                        })\r\n                            .join(\"\");\r\n                    }\r\n                    else {\r\n                        return innerStr.split(\"\").reverse().join(\"\");\r\n                    }\r\n                }\r\n                else {\r\n                    const resultArray = [...splitStrByGap(str)];\r\n                    return resultArray\r\n                        .map((item) => {\r\n                        return reverseSingle(item.join(\"\"));\r\n                    })\r\n                        .join(\"\");\r\n                }\r\n            }\r\n            else {\r\n                return str;\r\n            }\r\n        };\r\n        // 分治法字符串的反转\r\n        const stringReverseWithGap = () => {\r\n            console.log(reverseSingle(testStrKuo));\r\n        };\r\n        const largetTraceFirst01 = (nodeList) => {\r\n            if (!nodeList?.length) {\r\n                return;\r\n            }\r\n            let childList = [];\r\n            for (let i = 0; i < nodeList.length; i++) {\r\n                console.log(nodeList[i]);\r\n                if (nodeList[i].left) {\r\n                    childList = [...childList, nodeList[i].left];\r\n                }\r\n                if (nodeList[i].right) {\r\n                    childList = [...childList, nodeList[i].right];\r\n                }\r\n            }\r\n            if (childList.length) {\r\n                largetTraceFirst01(childList);\r\n            }\r\n        };\r\n        const largetFirstTrace = () => {\r\n            const tree = getFirstByMidAndAfterTreeTest();\r\n            largetTraceFirst01([tree]); // ACBFGDE\r\n        };\r\n        const comparetTwoTree = () => {\r\n            const rootA = getAfterByFirstMidTrace(\"ACFGBDE\", \"FCGADBE\"); //  \"FGCDEBA\"\r\n            const rootB = getAfterByFirstMidTrace(\"ACFGBDE\", \"FCGADBE\"); //  \"FGCDEBA\"\r\n            const rootC = getAfterByFirstMidTrace(\"ACFBDE\", \"FCADBE\");\r\n            const isSame = compareTwoTreeAndReturnBoolean(rootA, rootB);\r\n            const isSame2 = compareTwoTreeAndReturnBoolean(rootA, rootC);\r\n            console.log(\"isSameisSameisSameisSame\", isSame, isSame2);\r\n        };\r\n        return {\r\n            plainSortA,\r\n            quickSort,\r\n            arr1,\r\n            arr2,\r\n            reverseQuickSort,\r\n            bubbleSortArray,\r\n            bubbleSortArrayA,\r\n            linkNodeTackDeep,\r\n            recurGetArrTest,\r\n            reverseLinkAndGetRoot,\r\n            getLastNodeDeep,\r\n            firstMidTrace,\r\n            leftMidTrace,\r\n            afterRootTrace,\r\n            getFirstByMidAndAfterTreeTest,\r\n            treeDataRef,\r\n            stringOnly,\r\n            stringReverseWithGap,\r\n            largetFirstTrace,\r\n            comparetTwoTree,\r\n        };\r\n    },\r\n    method() { },\r\n    components: {\r\n        TreeShow,\r\n    },\r\n});\r\n//# sourceMappingURL=data:application/json;base64,","import { render } from \"./index.vue?vue&type=template&id=0f416d40&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=0f416d40&lang=less\"\n\nimport exportComponent from \"E:\\\\vscodeWork\\\\vue\\\\vue3webpack5-2022100601\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["cssReload","module","id","hot","dispose","accept","undefined","_hoisted_1","class","_hoisted_2","_","_hoisted_3","recurGetArr","arr","i","len","length","console","log","swap","num1","num2","temp","sortOlogn","array","start","end","isReverse","pointer","left","right","j","pointerArr","getMin","minIndx","min","result","LinkNode","data","next","constructor","this","recurLinkList","root","getLastNode","reverseLink","newRoot","push","TreeNode","midFirstTrace","leftMidFirstTrace","afterLeftRightMidTrace","getAfterByFirstMidTrace","firstStr","midStr","rootData","currentRoot","midIndex","indexOf","leftMidStr","slice","leftFirstArr","split","startLeftIndex","stop","forEach","item","includes","leftFirstStr","join","rightMidStr","rightFirstStr","tempArr","every","compareTwoTreeAndReturnBoolean","rootA","rootB","leftResult","rightResult","props","name","setup","_ctx","_cache","$props","$setup","$data","$options","_component_TreeShow","treeRoot","key","deepCount","rootNode","rootNodeA","rootNodeB","rootNodeC","tree","nodeB","nodeC","nodeD","nodeE","nodeF","nodeG","nodeH","nodeI","nodeJ","treeDataRef","getFirstByMidAndAfterTreeTest","value","splitStrByGap","tempStr","splitResultArray","stack","index","filter","reverseSingle","str","innerStr","reverse","map","largetTraceFirst01","nodeList","childList","plainSortA","arrResult","Array","plainSort","quickSort","arr1","arr2","reverseQuickSort","bubbleSortArray","bubbleSort","bubbleSortArrayA","bubbleSortA","linkNodeTackDeep","recurGetArrTest","reverseLinkAndGetRoot","newNode","getLastNodeDeep","firstMidTrace","leftMidTrace","afterRootTrace","stringOnly","strItem","stringReverseWithGap","largetFirstTrace","comparetTwoTree","rootC","isSame","isSame2","method","components","TreeShow","onClick","$event"],"sourceRoot":""}